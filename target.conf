[header] errno.h. 
[func/]
void perror (const char *message) <stub>
char * strerror (int errnum) <stub>
char * strerror_r (int errnum, char *buf, size_t n) <stub>
void error (int status, int errnum, const char *format, ...) <stub>
void exit(int status) <stub>
[/func]

## stub function

[header] sys/types.h
[header] sys/socket.h
[header] unistd.h
[header] keyutils.h
[header] sys/timex.h
[header] fcntl.h
[header] unistd.h
[header] sys/capability.h
[header] sys/stat.h
[header] time.h
[header] sys/epoll.h
[header] sys/vfs.h
[header] grp.h
[header] linux/futex.h
[header] sys/time.h
[header] sys/statvfs.h
[header] sys/ptrace.h
[header] poll.h
[header] sys/resource.h
[header] mqueue.h
[header] sys/msg.h
#[header] linux/nfsd/syscall.h
[header] sys/utsname.h
[header] signal.h
[header] sched.h
[header] sys/sysinfo.h
[header] sys/sem.h
[header] sys/shm.h
[header] sys/times.h
[header] ustat.h
[header] utime.h
[header] sys/wait.h

[func/]
void * mmap (void *address, size_t length, int protect, int flags, int filedes, off_t offset) <f:-1>
void * mmap64 (void *address, size_t length, int protect, int flags, int filedes, off64_t offset) <f:-1>
int accept(int sockfd, struct sockaddr *addr, socklen_t *addrlen) <f:-1>
int accept4(int sockfd, struct sockaddr *addr, socklen_t *addrlen, int flags) <f:-1>
int access(const char *pathname, int mode) <f:-1>
int acct(const char *filename) <f:-1>
key_serial_t add_key(const char *type, const char *description, const void *payload, size_t plen, key_serial_t keyring) <f:-1>
int adjtimex(struct timex *buf) <f:-1>
int posix_fadvise(int fd, off_t offset, off_t len, int advice) <f:-1>
int sync_file_range(int fd, off64_t offset, off64_t nbytes, unsigned int flags) <f:-1>
int bind(int sockfd, const struct sockaddr *addr, socklen_t addrlen) <f:-1>
int brk(void *addr) <f:-1>
void *sbrk(intptr_t increment) <f:-1>
int capget(cap_user_header_t hdrp, cap_user_data_t datap) <f:-1>
int capset(cap_user_header_t hdrp, const cap_user_data_t datap) <f:-1>
int chdir(const char *path) <f:-1>
int fchdir(int fd) <f:-1>
int chmod(const char *path, mode_t mode) <f:-1>
int fchmod(int fd, mode_t mode) <f:-1>
int chown(const char *path, uid_t owner, gid_t group)
int fchown(int fd, uid_t owner, gid_t group)
int lchown(const char *path, uid_t owner, gid_t group)
int chroot(const char *path)
int clock_getres(clockid_t clk_id, struct timespec *res)
int clock_gettime(clockid_t clk_id, struct timespec *tp)
int clock_settime(clockid_t clk_id, const struct timespec *tp)
int clock_nanosleep(clockid_t clock_id, int flags, const struct timespec *request, struct timespec *remain)
#int clone(int (*fn)(void *), void *child_stack, int flags, void *arg, ... /* pid_t *ptid, struct user_desc *tls, pid_t *ctid */ ) ## TODO
int close(int fd)
int connect(int sockfd, const struct sockaddr *addr, socklen_t addrlen)
#int open(const char *pathname, int flagas, ...) <stub> ## TODO
int creat(const char *pathname, mode_t mode)
int dup(int oldfd)
int dup2(int oldfd, int newfd)
int dup3(int oldfd, int newfd, int flags)
int epoll_create(int size)
int epoll_create1(int flags)
int epoll_ctl(int epfd, int op, int fd, struct epoll_event *event)
int epoll_wait(int epfd, struct epoll_event *events, int maxevents, int timeout)
int epoll_pwait(int epfd, struct epoll_event *events, int maxevents, int timeout, const sigset_t *sigmask)
int eventfd(unsigned int initval, int flags)
#int execve(const char *filename, char *const argv[], char *const envp[]) #TODO
int faccessat(int dirfd, const char *pathname, int mode, int flags)
int fallocate(int fd, int mode, off_t offset, off_t len)
int fchmodat(int dirfd, const char *pathname, mode_t mode, int flags)
#int fcntl(int fd, int cmd, ... /* arg */ ) #TODO
int fsync(int fd)
int fdatasync(int fd)
ssize_t getxattr(const char *path, const char *name, void *value, size_t size)
ssize_t lgetxattr(const char *path, const char *name, void *value, size_t size)
ssize_t fgetxattr(int fd, const char *name, void *value, size_t size)
int flock(int fd, int operation)
#pid_t fork(void) ## TODO
int setxattr(const char *path, const char *name, const void *value, size_t size, int flags)
int lsetxattr(const char *path, const char *name, const void *value, size_t size, int flags)
int fsetxattr(int fd, const char *name, const void *value, size_t size, int flags)
int stat(const char *path, struct stat *buf)
int fstat(int fd, struct stat *buf)
int lstat(const char *path, struct stat *buf)
int fstatat(int dirfd, const char *pathname, struct stat *buf, int flags)
int statfs(const char *path, struct statfs *buf)
int fstatfs(int fd, struct statfs *buf)
int statvfs(const char *path, struct statvfs *buf)
int fstatvfs(int fd, struct statvfs *buf)
int truncate(const char *path, off_t length)
int ftruncate(int fd, off_t length)
int futex(int *uaddr, int op, int val, const struct timespec *timeout, int *uaddr2, int val3)
#int futimesat(int dirfd, const char *pathname, const struct timeval times[2]) #TODO
char *getcwd(char *buf, size_t size)
char *getwd(char *buf)
char *get_current_dir_name(void)
int getdomainname(char *name, size_t len)
int setdomainname(const char *name, size_t len)
int getdtablesize(void)
#int getgroups(int size, gid_t list[]) #TODO
int setgroups(size_t size, const gid_t *list)
long gethostid(void)
int sethostid(long hostid)
int gethostname(char *name, size_t len)
int sethostname(const char *name, size_t len)
int getitimer(int which, struct itimerval *curr_value)
int setitimer(int which, const struct itimerval *new_value, struct itimerval *old_value)
int get_mempolicy(int *mode, unsigned long *nodemask, unsigned long maxnode, unsigned long addr, unsigned long flags)
int getpagesize(void)
int getpeername(int sockfd, struct sockaddr *addr, socklen_t *addrlen)
int setpgid(pid_t pid, pid_t pgid)
pid_t getpgid(pid_t pid)
#int setpgrp(void)                   /* System V version */ #TODO
#int setpgrp(pid_t pid, pid_t pgid) #TODO
int getpriority(int which, int who)
int setpriority(int which, int who, int prio)
int getresuid(uid_t *ruid, uid_t *euid, uid_t *suid)
int getresgid(gid_t *rgid, gid_t *egid, gid_t *sgid)
int getrlimit(int resource, struct rlimit *rlim);
int setrlimit(int resource, const struct rlimit *rlim)
int prlimit(pid_t pid, int resource, const struct rlimit *new_limit, struct rlimit *old_limit)
int getrusage(int who, struct rusage *usage)
pid_t getsid(pid_t pid)
int getsockname(int sockfd, struct sockaddr *addr, socklen_t *addrlen)
int getsockopt(int sockfd, int level, int optname, void *optval, socklen_t *optlen)
int setsockopt(int sockfd, int level, int optname, const void *optval, socklen_t optlen)
int gettimeofday(struct timeval *tv, struct timezone *tz)
int settimeofday(const struct timeval *tv, const struct timezone *tz)
int inotify_add_watch(int fd, const char *pathname, uint32_t mask)
int inotify_init(void)
int inotify_init1(int flags)
int inotify_rm_watch(int fd, int wd)
#int ioctl(int d, unsigned long request, ...) #TODO
int ioperm(unsigned long from, unsigned long num, int turn_on)
int iopl(int level)
int ipc(unsigned int call, int first, int second, int third, void *ptr, long fifth)
#long keyctl(int cmd, ...) #TODO
int kill(pid_t pid, int sig)
int killpg(int pgrp, int sig)
int link(const char *oldpath, const char *newpath)
int linkat(int olddirfd, const char *oldpath, int newdirfd, const char *newpath, int flags)
int listen(int sockfd, int backlog)
size_t listxattr(const char *path, char *list, size_t size)
ssize_t llistxattr(const char *path, char *list, size_t size)
ssize_t flistxattr(int fd, char *list, size_t size)
#int lookup_dcookie(u64 cookie, char *buffer, size_t len) ##not used
int removexattr(const char *path, const char *name)
int lremovexattr(const char *path, const char *name)
int fremovexattr(int fd, const char *name)
off_t lseek(int fd, off_t offset, int whence)
int madvise(void *addr, size_t length, int advice)
int mbind(void *addr, unsigned long len, int mode, unsigned long *nodemask, unsigned long maxnode, unsigned flags)
long migrate_pages(int pid, unsigned long maxnode, const unsigned long *old_nodes, const unsigned long *new_nodes)
int mincore(void *addr, size_t length, unsigned char *vec)
int mkdir(const char *pathname, mode_t mode)
int mkdirat(int dirfd, const char *pathname, mode_t mode)
int mknod(const char *pathname, mode_t mode, dev_t dev)
int mknodat(int dirfd, const char *pathname, mode_t mode, dev_t dev)
int mlock(const void *addr, size_t len)
int munlock(const void *addr, size_t len)
int mlockall(int flags)
int munlockall(void)
int munmap(void *addr, size_t length)
void *mmap2(void *addr, size_t length, int prot, int flags, int fd, off_t pgoffset)
int mount(const char *source, const char *target, const char *filesystemtype, unsigned long mountflags, const void *data)
#long move_pages(int pid, unsigned long count, void **pages, const int *nodes, int *status, int flags) # TODO
int mprotect(void *addr, size_t len, int prot)
int mq_notify(mqd_t mqdes, const struct sigevent *sevp)
#mqd_t mq_open(const char *name, int oflag) ## TODO
#mqd_t mq_open(const char *name, int oflag, mode_t mode, struct mq_attr *attr) ## TODO
ssize_t mq_receive(mqd_t mqdes, char *msg_ptr, size_t msg_len, unsigned *msg_prio)
ssize_t mq_timedreceive(mqd_t mqdes, char *msg_ptr, size_t msg_len, unsigned *msg_prio, const struct timespec *abs_timeout)
int mq_send(mqd_t mqdes, const char *msg_ptr, size_t msg_len, unsigned msg_prio)
int mq_timedsend(mqd_t mqdes, const char *msg_ptr, size_t msg_len, unsigned msg_prio, const struct timespec *abs_timeout)
int mq_unlink(const char *name)
#void *mremap(void *old_address, size_t old_size, size_t new_size, int flags, ... /* void *new_address */) ## TODO
int msgctl(int msqid, int cmd, struct msqid_ds *buf)
int msgget(key_t key, int msgflg)
int msgsnd(int msqid, const void *msgp, size_t msgsz, int msgflg)
ssize_t msgrcv(int msqid, void *msgp, size_t msgsz, long msgtyp, int msgflg)
int msync(void *addr, size_t length, int flags)
int nanosleep(const struct timespec *req, struct timespec *rem)
int select(int nfds, fd_set *readfds, fd_set *writefds, fd_set *exceptfds, struct timeval *timeout)
int pselect(int nfds, fd_set *readfds, fd_set *writefds, fd_set *exceptfds, const struct timespec *timeout, const sigset_t *sigmask)
#long nfsservctl(int cmd, struct nfsctl_arg *argp, union nfsctl_res *resp) ##not used from kernel 3.1
int nice(int inc)
int uname(struct utsname *buf)
#int openat(int dirfd, const char *pathname, int flags) #TODO
#int openat(int dirfd, const char *pathname, int flags, mode_t mode) #TODO
int pause(void)
int pciconfig_read(unsigned long bus, unsigned long dfn, unsigned long off, unsigned long len, void *buf)
int pciconfig_write(unsigned long bus, unsigned long dfn, unsigned long off, unsigned long len, void *buf)
int pciconfig_iobase(long which, unsigned long bus, unsigned long devfn)
int personality(unsigned long persona)
#int pipe(int pipefd[2]) ## TODO
#int pipe2(int pipefd[2], int flags) ## TODO
int poll(struct pollfd *fds, nfds_t nfds, int timeout)
int ppoll(struct pollfd *fds, nfds_t nfds, const struct timespec *timeout_ts, const sigset_t *sigmask)
int prctl(int option, unsigned long arg2, unsigned long arg3, unsigned long arg4, unsigned long arg5)
ssize_t pread(int fd, void *buf, size_t count, off_t offset)
ssize_t pwrite(int fd, const void *buf, size_t count, off_t offset)
ssize_t readv(int fd, const struct iovec *iov, int iovcnt)
ssize_t writev(int fd, const struct iovec *iov, int iovcnt)
ssize_t preadv(int fd, const struct iovec *iov, int iovcnt, off_t offset)
ssize_t pwritev(int fd, const struct iovec *iov, int iovcnt, off_t offset)
ssize_t process_vm_readv(pid_t pid, const struct iovec *local_iov, unsigned long liovcnt, const struct iovec *remote_iov, unsigned long riovcnt, unsigned long flags)
ssize_t process_vm_writev(pid_t pid, const struct iovec *local_iov, unsigned long liovcnt, const struct iovec *remote_iov, unsigned long riovcnt, unsigned long flags)
#long ptrace(enum __ptrace_request request, pid_t pid, void *addr, void *data)
int quotactl(int cmd, const char *special, int id, caddr_t addr)
ssize_t read(int fd, void *buf, size_t count)
ssize_t readahead(int fd, off64_t offset, size_t count)
ssize_t readlink(const char *path, char *buf, size_t bufsiz)
int readlinkat(int dirfd, const char *pathname, char *buf, size_t bufsiz)
int reboot(int cmd)
ssize_t recv(int sockfd, void *buf, size_t len, int flags)
ssize_t recvfrom(int sockfd, void *buf, size_t len, int flags, struct sockaddr *src_addr, socklen_t *addrlen)
ssize_t recvmsg(int sockfd, struct msghdr *msg, int flags)
int recvmmsg(int sockfd, struct mmsghdr *msgvec, unsigned int vlen, unsigned int flags, struct timespec *timeout)
int remap_file_pages(void *addr, size_t size, int prot, ssize_t pgoff, int flags)
int rename(const char *oldpath, const char *newpath)
int renameat(int olddirfd, const char *oldpath, int newdirfd, const char *newpath)
key_serial_t request_key(const char *type, const char *description, const char *callout_info, key_serial_t keyring)
int rmdir(const char *pathname)
int sigaction(int signum, const struct sigaction *act, struct sigaction *oldact)
int sigpending(sigset_t *set)
int sigprocmask(int how, const sigset_t *set, sigset_t *oldset)
int sigsuspend(const sigset_t *mask)
int sigwaitinfo(const sigset_t *set, siginfo_t *info)
int sigtimedwait(const sigset_t *set, siginfo_t *info, const struct timespec *timeout)
#int sched_setaffinity(pid_t pid, size_t cpusetsize, cpu_set_t *mask)
int sched_setaffinity(pid_t pid, size_t cpusetsize, const cpu_set_t *mask)
int sched_getaffinity(pid_t pid, size_t cpusetsize, cpu_set_t *mask)
int sched_setparam(pid_t pid, const struct sched_param *param)
int sched_getparam(pid_t pid, struct sched_param *param)
int sched_get_priority_max(int policy)
int sched_get_priority_min(int policy)
int sched_setscheduler(pid_t pid, int policy, const struct sched_param *param)
int sched_getscheduler(pid_t pid)
int sched_rr_get_interval(pid_t pid, struct timespec * tp)
int sched_yield(void)
#int semctl(int semid, int semnum, int cmd, ...) ##TODO
int semget(key_t key, int nsems, int semflg)
int semop(int semid, struct sembuf *sops, unsigned nsops)
int semtimedop(int semid, struct sembuf *sops, unsigned nsops, struct timespec *timeout)
ssize_t send(int sockfd, const void *buf, size_t len, int flags)
ssize_t sendto(int sockfd, const void *buf, size_t len, int flags, const struct sockaddr *dest_addr, socklen_t addrlen)
ssize_t sendmsg(int sockfd, const struct msghdr *msg, int flags)
ssize_t sendfile(int out_fd, int in_fd, off_t *offset, size_t count)
int sendmmsg(int sockfd, struct mmsghdr *msgvec, unsigned int vlen, unsigned int flags)
int seteuid(uid_t euid)
int setegid(gid_t egid)
int setfsgid(uid_t fsgid)
int setfsuid(uid_t fsuid)
int set_mempolicy(int mode, unsigned long *nodemask, unsigned long maxnode)
int setns(int fd, int nstype)
int setreuid(uid_t ruid, uid_t euid)
int setregid(gid_t rgid, gid_t egid)
int setresuid(uid_t ruid, uid_t euid, uid_t suid)
int setresgid(gid_t rgid, gid_t egid, gid_t sgid)
pid_t setsid(void)
int setuid(uid_t uid)
void *shmat(int shmid, const void *shmaddr, int shmflg)
int shmdt(const void *shmaddr)
int shmctl(int shmid, int cmd, struct shmid_ds *buf)
int shmget(key_t key, size_t size, int shmflg)
int shutdown(int sockfd, int how)
int sigaltstack(const stack_t *ss, stack_t *oss)
sighandler_t signal(int signum, sighandler_t handler)
int signalfd(int fd, const sigset_t *mask, int flags)
int sigqueue(pid_t pid, int sig, const union sigval value)
int socket(int domain, int type, int protocol)
#int socketpair(int domain, int type, int protocol, int sv[2]) ##TODO
ssize_t splice(int fd_in, loff_t *off_in, int fd_out, loff_t *off_out, size_t len, unsigned int flags)
#int stime(time_t *t)
int stime(const time_t *t)
int swapon(const char *path, int swapflags)
int swapoff(const char *path)
int symlink(const char *target, const char *linkpath)
int symlinkat(const char *oldpath, int newdirfd, const char *newpath)
int syncfs(int fd)
#int syscall(int number, ...) ##TODO
#int sysfs(int option, const char *fsname) ##TODO
#int sysfs(int option, unsigned int fs_index, char *buf) #TODO
#int sysfs(int option) #TODO
int sysinfo(struct sysinfo *info)
int klogctl(int type, char *bufp, int len)
ssize_t tee(int fd_in, int fd_out, size_t len, unsigned int flags)
time_t time(time_t *t)
int timer_create(clockid_t clockid, struct sigevent *sevp, timer_t *timerid)
int timer_delete(timer_t timerid)
int timerfd_create(int clockid, int flags);
int timerfd_settime(int fd, int flags, const struct itimerspec *new_value, struct itimerspec *old_value)
int timerfd_gettime(int fd, struct itimerspec *curr_value)
int timer_getoverrun(timer_t timerid)
int timer_settime(timer_t timerid, int flags, const struct itimerspec *new_value, struct itimerspec * old_value)
int timer_gettime(timer_t timerid, struct itimerspec *curr_value)
clock_t times(struct tms *buf)
mode_t umask(mode_t mask)
int umount(const char *target)
int umount2(const char *target, int flags)
int unlink(const char *pathname)
int unlinkat(int dirfd, const char *pathname, int flags)
int unshare(int flags)
int uselib(const char *library)
int ustat(dev_t dev, struct ustat *ubuf)
int utime(const char *filename, const struct utimbuf *times)
#int utimes(const char *filename, const struct timeval times[2]) ##TODO
#int utimensat(int dirfd, const char *pathname, const struct timespec times[2], int flags) ##TODO
#int futimens(int fd, const struct timespec times[2]) ##TODO
#pid_t vfork(void) ##TODO
int vhangup(void)
ssize_t vmsplice(int fd, const struct iovec *iov, unsigned long nr_segs, unsigned int flags)
pid_t wait(int *status)
pid_t waitpid(pid_t pid, int *status, int options)
int waitid(idtype_t idtype, id_t id, siginfo_t *infop, int options)
ssize_t write(int fd, const void *buf, size_t count)


[/func]


